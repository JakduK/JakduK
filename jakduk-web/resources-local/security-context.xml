<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd
           http://www.springframework.org/schema/security/oauth2 
           http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

  	<!--beans:bean class="com.jakduk.common.FilterModifiy"/-->

	<http auto-config="true" use-expressions="true" disable-url-rewriting="false">

	  	<!-- OAuth 2.0 로직을 적용 시키기 위한 Filter 설정 -->
	  	<custom-filter ref="oauth2ClientFilter" after="EXCEPTION_TRANSLATION_FILTER"/>
	  	<custom-filter ref="oauthFilter" before="FILTER_SECURITY_INTERCEPTOR"/>

	</http>

	<beans:bean id="oauthSuccessHandler" class="com.jakduk.authentication.common.OAuthSuccessHandler"/>
	<beans:bean id="oauthFailureHandler" class="com.jakduk.authentication.common.OAuthFailureHandler"/>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="jakdukAuthenticationProvider"/>
		<authentication-provider ref="facebookAuthenticationProvider"/>
		<authentication-provider ref="daumAuthenticationProvider"/>
	</authentication-manager>
	
	<!-- Facebook OAuth 2.0 Client Setup -->
	<oauth:resource id="facebook" type="authorization_code"
		client-id="#{facebookProp['facebook.client-id']}"
		client-secret="#{facebookProp['facebook.client-secret']}"
		access-token-uri="#{facebookProp['facebook.access-token-uri']}"
		user-authorization-uri="#{facebookProp['facebook.user-authorization-uri']}"
		authentication-scheme="query" 
		token-name="access_token"
		pre-established-redirect-uri="/"
		client-authentication-scheme="form"/>
		
	<oauth:resource id="daum" type="authorization_code"
		client-id="#{daumProp['daum.client-id']}"
		client-secret="#{daumProp['daum.client-secret']}"
		access-token-uri="#{daumProp['daum.access-token-uri']}"
		user-authorization-uri="#{daumProp['daum.user-authorization-uri']}"
		authentication-scheme="query"
		token-name="access_token" 
		pre-established-redirect-uri="/"
		client-authentication-scheme="form"/>

	<!-- Facebook 서버에 접속하기 위한 RestTemplate -->	
	<oauth:rest-template id="facebookRestTemplate" resource="facebook"/>
	<oauth:rest-template id="daumRestTemplate" resource="daum"/>
	
	<!-- OAuth 2.0 Client를 연동 시키기 위한 Filter 생성 -->
	<oauth:client id="oauth2ClientFilter" />
	
	<!-- Facebook 에서 데이터를 가져 오기 위한 Service -->
	<beans:bean id="facebookService" class="com.jakduk.authentication.facebook.FacebookService">
		<beans:property name="facebookRestTemplate" ref="facebookRestTemplate" />
		<beans:property name="profileUri" value="#{facebookProp['facebook.profile-uri']}" />
	</beans:bean>
	
	<beans:bean id="daumService" class="com.jakduk.authentication.daum.DaumService">
		<beans:property name="daumRestTemplate" ref="daumRestTemplate"/>
		<beans:property name="profileUri" value="#{daumProp['daum.profile-uri']}"/>
	</beans:bean>

	<beans:bean id="oauthFilter" class="com.jakduk.authentication.common.OAuthProcessingFilter">
		<beans:property name="authenticationManager" ref="authenticationManager"/>
		<beans:property name="authenticationSuccessHandler" ref="oauthSuccessHandler"/>
		<beans:property name="authenticationFailureHandler" ref="oauthFailureHandler"/>
	</beans:bean>	

	<beans:bean id="facebookAuthenticationProvider" class="com.jakduk.authentication.facebook.FacebookAuthenticationProvider">
		<beans:property name="facebookService" ref="facebookService"/>
	</beans:bean>
	
	<beans:bean id="daumAuthenticationProvider" class="com.jakduk.authentication.daum.DaumAuthenticationProvider">
		<beans:property name="daumService" ref="daumService"/>
	</beans:bean>

</beans:beans>