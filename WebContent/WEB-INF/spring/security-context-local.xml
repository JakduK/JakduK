<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd
           http://www.springframework.org/schema/util 
           http://www.springframework.org/schema/util/spring-util-3.2.xsd
           http://www.springframework.org/schema/security/oauth2 
           http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd">
       
  <beans:bean class="com.jakduk.common.FilterModifiy"/>
	<http pattern="/web-resources/**" security="none" />
	
	<http auto-config="true" use-expressions="true">
  	<custom-filter ref="facebookAuthenticationFilter" before="FILTER_SECURITY_INTERCEPTOR" />
  	<!-- OAuth 2.0 로직을 적용 시키기 위한 Filter 설정 -->
  	<custom-filter ref="oauth2ClientFilter" after="EXCEPTION_TRANSLATION_FILTER" />

		<!-- if localhost, change https to http from requires-channel -->
		<intercept-url pattern="/login*" access="isAnonymous()" requires-channel="http"/>
		<intercept-url pattern="/j_spring_*" access="permitAll" requires-channel="http"/>
		<intercept-url pattern="/user/**" access="authenticated" requires-channel="http"/>
		<intercept-url pattern="/check/user/*" access="permitAll" requires-channel="http"/>
		<intercept-url pattern="/**" requires-channel="http"/>
		<intercept-url pattern="/admin" access="permitAll" />
		<intercept-url pattern="/logout" access="permitAll" />
		<intercept-url pattern="/home" access="permitAll" />
		<intercept-url pattern="/about" access="permitAll" />
		<intercept-url pattern="/sample" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/user/list" access="hasRole('ROLE_TEST_01')" />
		<intercept-url pattern="/board/*/write" access="authenticated" />
		
		<form-login login-page="/login"
			authentication-success-handler-ref="loginSuccessHandler" 
			authentication-failure-handler-ref="loginFailureHandler"/>
			
		<access-denied-handler error-page="/denied" />
		
		<session-management>
			<concurrency-control max-sessions="1" expired-url="/login/duplicate"/>
		</session-management>
		
		<logout invalidate-session="true" logout-url="/logout"/>					
	</http>
	
	<beans:bean id="loginSuccessHandler" class="com.jakduk.authentication.common.LoginSuccessHandler"/>
	<beans:bean id="loginFailureHandler" class="com.jakduk.authentication.common.LoginFailureHandler"/>
	<beans:bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>
	<beans:bean id="authUserDetailsService" class="com.jakduk.authentication.jakduk.AuthUserDetailsService"/>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="authUserDetailsService">
			<password-encoder ref="encoder" />
		</authentication-provider>
		<authentication-provider ref="facebookAuthenticationProvider"/>
	</authentication-manager>
	
	<!-- Facebook OAuth 2.0 Client Setup -->
	<oauth:resource id="facebook" type="authorization_code"
		client-id="#{facebookProp['facebook.client-id']}" 
		client-secret="#{facebookProp['facebook.client-secret']}"
		access-token-uri="#{facebookProp['facebook.access-token-uri']}"
		user-authorization-uri="#{facebookProp['facebook.user-authorization-uri']}"
		authentication-scheme="query" 
		token-name="oauth_token" 
		pre-established-redirect-uri="/"
		client-authentication-scheme="form" />

	<!-- Facebook 서버에 접속하기 위한 RestTemplate -->	
	<oauth:rest-template resource="facebook" id="facebookRestTemplate" />
	
	<!-- OAuth 2.0 Client를 연동 시키기 위한 Filter 생성 -->
	<oauth:client id="oauth2ClientFilter" />
	
	<!-- Facebook 에서 데이터를 가져 오기 위한 Service -->
	<beans:bean id="facebookService" class="com.jakduk.authentication.facebook.FacebookService">
		<beans:property name="facebookRestTemplate" ref="facebookRestTemplate" />
		<beans:property name="profileUri" value="#{facebookProp['facebook.profile-uri']}" />
	</beans:bean>
	
	<beans:bean id="facebookAuthenticationFilter" class="com.jakduk.authentication.facebook.FacebookAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager"/>
	</beans:bean>

	<beans:bean id="facebookAuthenticationProvider" class="com.jakduk.authentication.facebook.FacebookAuthenticationProvider">
		<beans:property name="facebookService" ref="facebookService"/>
	</beans:bean> 	

</beans:beans>